/* FONTS MIXINS */

@mixin fontOpenSans($size: 1em, $weight: normal, $style: normal) {
  font-family: "Open Sans", sans-serif;
  font-size: $size;
  font-weight: $weight;
  font-style: $style;
}

@mixin fontMontserrat($size: 1em, $weight: normal, $style: normal) {
  font-family: "Montserrat", sans-serif;
  font-size: $size;
  font-weight: $weight;
  font-style: $style;
}

/* GENERAL MIXINS */
@mixin box-shadow-out($x: 0px, $y: 0px, $blur: 2px, $spread: 0, $alpha: 0.5) {
  -webkit-box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
  -moz-box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
  box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
}

@mixin transition($to: all, $time: 1s, $type: ease-out) {
  -webkit-transition: $to $time $type; /* Chrome y Safari */
  -o-transition: $to $time $type; /* Opera */
  -moz-transition: $to $time $type; /* Mozilla Firefox */
  -ms-transition: $to $time $type; /* Internet Explorer */
  transition: $to $time $type; /* W3C */
}

@mixin rotate($degrees) {
  transform: rotate($degrees);
  -ms-transform: rotate($degrees); /* IE 9 */
  -moz-transform: rotate($degrees); /* Firefox */
  -webkit-transform: rotate($degrees); /* Safari and Chrome */
  -o-transform: rotate($degrees); /* Opera */
}

@mixin scale($scale) {
  transform: scale($scale);
  -ms-transform: scale($scale); /* IE 9 */
  -moz-transform: scale($scale); /* Firefox */
  -webkit-transform: scale($scale); /* Safari and Chrome */
  -o-transform: scale($scale); /* Opera */
}

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(
    legacy-direction($direction),
    $color-stops
  );
  background: linear-gradient($direction, $color-stops);
}

@function is-direction($value) {
  $is-keyword: index(
    (
      to top,
      to top right,
      to right top,
      to right,
      to bottom right,
      to right bottom,
      to bottom,
      to bottom left,
      to left bottom,
      to left,
      to left top,
      to top left
    ),
    $value
  );
  $is-angle: type-of($value) == "number" and
    index("deg" "grad" "turn" "rad", unit($value));

  @return $is-keyword or $is-angle;
}

@function legacy-direction($value) {
  @if is-direction($value) == false {
    @error "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.";
  }

  $conversion-map: (
    to top: bottom,
    to top right: bottom left,
    to right top: left bottom,
    to right: left,
    to bottom right: top left,
    to right bottom: left top,
    to bottom: top,
    to bottom left: top right,
    to left bottom: right top,
    to left: right,
    to left top: right bottom,
    to top left: bottom right
  );

  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }

  @return 90deg - $value;
}
